# dsa

>>Basic Data Structures to learn:

Arrays, Strings, Stacks, Queues
Asymptotic analysis (Big-O notation)
Basic math operations (addition, subtraction, multiplication, division, exponentiation)
Sqrt(n) primality testing
Euclidâ€™s GCD Algorithm
Basic Recursion
Greedy Algorithms
Basic Dynamic Programming
Naive string searching
O(n logn) Sorting
Binary Searching



>>Topics
Time complexity
Basic math problem
Factorization
Base, Unary, Binary number systems
Conversions for base N
Arrays
Basic array implementations
Sorting algorithms (insertion,merge,quick,selection,bubble)
Searching algorithms(Binary Search)
Bit Manipulation
Linked Lists
Stacks And Queues
Backtracking
Hashing
Heaps And Maps
Tree Data Structure
Dynamic Programming
Greedy Algorithm
Graph Data Structure & Algorithms
Practice, practice ,practice

ðŸ”¥Service based Companies:
Language basics (Java/C++/Python)
Arrays/2D Arrays
Strings
Searching & Sorting
Linked List
Stacks & Queues
Trees/BST
Basic Graphs

ðŸ”¥Product based Companies:
Language basics (Java/C++/Python)
Arrays/2D Arrays
Strings
Searching & Sorting
Backtracking
Linked List
Stacks & Queues
Trees/BST
Graphs
Dynamic Programming
Tries
Segment Trees (basic)
Bit Manipulation
